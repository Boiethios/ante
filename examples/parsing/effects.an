
effect Log with log: string -> unit

effect Use a with
    get: unit -> a
    set: a -> unit


handle log "test1"
| log s -> print s

// Test parsing of pattern matching within handle
handle log "test2"
| log "a" -> print "case 1"
| log "b" -> print "case 2"
| log _   -> print "case 3"

handle foo + bar
| get () -> foo resume 1 // test 'resume' is parsed as a normal identifier
| set 0 -> resume ()
| set _ -> resume ()

handle ()
| return _ -> "foo"
| log _ -> "impossible"

// args: --parse
// expected stdout:
// (effect Log with
//     (: log (string -> unit))
// );
// (effect Use a with
//     (: get (unit -> a))
//     (: set (a -> unit))
// );
// (handle (log "test1") ((log s) (print s)));
// (handle (log "test2") ((log "a") (print "case 1")) ((log "b") (print "case 2")) ((log _) (print "case 3")));
// (handle ('+' foo bar) ((get ()) (foo resume 1)) ((set 0) (resume ())) ((set _) (resume ())));
// (handle () ((return _) "foo") ((log _) "impossible"))
