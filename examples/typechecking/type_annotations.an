
foo (_: i32) (_: string) : char = 'a'

bar: a - a -> i32 =
    fn _ b -> b

baz (a: usz) : Ptr a =
    transmute a

exit2 = exit
puts2: (Ptr char) -> i32 = puts

exit2 "test"
puts2

// args: --check --show-types
// TODO: bar should probably error that its annotated
//       type is more general than its actual type
// expected stderr:
// examples/typechecking/type_annotations.an:13:7	error: Expected argument of type i32, but found string
// exit2 "test"
// 

// expected stdout:
// bar : (forall a. (i32 - i32 -> i32 can a))
// baz : (forall a b. (usz -> (Ptr a) can b))
// exit2 : (forall a b. (i32 -> a can b))
// foo : (forall a. (i32 - string -> char can a))
// puts2 : (forall a. ((Ptr char) -> i32 can a))
